{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Jenkins Stack",
    "Parameters": {
      "VpcId": {
          "Description": "The target VPC Id",
          "Type": "AWS::EC2::VPC::Id",
          "Default": "-"
      },
      "SubnetId": {
          "Description": "The target Subnet Id",
          "Type": "AWS::EC2::Subnet::Id",
          "Default": "-"
      },
      "KeyName": {
          "Description": "The key pair that is allowed SSH access",
          "Type": "String",
          "Default": "-"
      }
    },
    "Resources": {
      "EC2Instance": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
              "KeyName": { "Ref": "KeyName" },
              "ImageId": "ami-14c5486b",
              "InstanceType": "t2.micro",
              "SecurityGroupIds" : [{ "Ref": "EC2InstanceSecurityGroup" }],
              "IamInstanceProfile": { "Ref": "EC2InstanceProfile" },
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": {"Fn::Join" : ["",[ { "Ref": "AWS::StackName" }, "-instance" ] ]}
                  }
              ],
              "UserData": {
                  "Fn::Base64": {
                      "Fn::Join": [
                          "",
                          [
                              "#!/bin/bash -ex\n",
                              "echo ECS_CLUSTER=", { "Ref": "ECSCluster" }, " >> /etc/ecs/ecs.config\n",
                              "groupadd -g 1000 jenkins\n",
                              "useradd -u 1000 -g jenkins jenkins\n"
                              "mkdir -p /ecs/jenkins_home\n",
                              "chown -R jenkins:jenkins /ecs/jenkins_home\n"
                          ]
                      ]
                  }
              }
          }
      },
      "EC2InstanceSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Jenkins Ingress Access",
          "SecurityGroupIngress" : [
            {
              "IpProtocol" : "tcp",
              "FromPort" : "8080",
              "ToPort" : "8080",
              "SourceSecurityGroupId" : { "Ref": "ELBSecurityGroup" }
            },
            {
              "IpProtocol" : "tcp",
              "FromPort" : "22",
              "ToPort" : "22",
              "CidrIp" : "0.0.0.0/0"
            }
          ],
          "VpcId" : { "Ref": "VpcId" },
          "Tags" :  [ { "Key": "Name", "Value": {"Fn::Join" : ["",[ { "Ref": "AWS::StackName" }, "-instance-sg" ] ]}} ]
        }
      },
      "EC2InstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ { "Ref": "EC2InstanceRole" } ]
         }
      },
      "EC2InstanceRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": { "Service": [ "ec2.amazonaws.com" ]},
                  "Action": [ "sts:AssumeRole"]
                }
              ]
             },
            "Path": "/",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
              "arn:aws:iam::aws:policy/AdministratorAccess"
            ]
         }
      }
    },
    "ELBSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Jenkins ELB Ingress Access",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80", "CidrIp" : "0.0.0.0/0" }
        ],
        "VpcId": { "Ref": "VpcId" },
        "Tags" :  [ { "Key": "Name", "Value": {"Fn::Join" : ["",[ { "Ref": "StackName" }, "-elb-sg" ] ]}} ]
      }
    },
    "ElasticLoadBalancer": {
       "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
       "Properties": {
          "CrossZone": "false",
          "SecurityGroups": [ { "Ref": "ELBSecurityGroup" }],
          "Listeners" : [
            {
              "LoadBalancerPort": "80",
              "InstancePort": "8080",
              "Protocol": "http"
            }
           ],
          "Instance": [ { "Ref": "EC2Instance" }],
          "Subnet": [ { "Ref": "SubnetId" }]
       }
    },
    "ECSCluster": {
      "Type": "AWS::ECS::Cluster"
    },
    "ECSTaskDefinition": {
      "Type": "AWS::ECS:TaskDefinition",
      "Properties":{
        "ContainerDefinitions" : [
          {
            "Name": "jenkins",
            "Image": "thishandp7/jenkins:ecs",
            "Memory": 995,
            "PortMappings": [ {"ContainerPort": 8080, "HostPort": 8080}],
            "MountPoints": [
              {
                "ContainerPath": "/var/jenkins_home",
                "SourceVolume": "jenkins_home",
              },
              {
                "ContainerPath": "/var/run/docker.sock",
                "SourceVolume": "docker"
              }
            ]
          }
        ],
        "Volumes": [
          {
            "Name": "jenkins_home",
            "Host": { "SourcePath": "/ecs/jenkins_home" }
          },
          {
            "Name": "docker",
            "Host": { "SourcePath": "/var/run/docker.sock" }
          }
        ]
      }
    },
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": { "Ref": "ECSCluster" },
        "DesiredCount": 1,
        "TaskDefinition": { "Ref": "ECSTaskDefinition" }
      }
    },
    "Outputs": {
      "ELBDomainName" : {
        "Description": "Public DNS name of ELB",
        "Value" : { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}
      },
      "EC2InstanceDomainName" : {
        "Description": "Public DNS name of EC2 Instance",
        "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicDnsName" ]}
      }
    }
}
